#version 450
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

uniform int brown; // brown or red group; true for brown, false for red
uniform int groupSize;
uniform int dataCount;

layout(binding = 0) buffer Input {
	uint elements[];
} data;

void main () {
    uint x = gl_GlobalInvocationID.x;
    if (x % groupSize < groupSize / 2) {
        uint index1 = x;
        uint value1 = data.elements[index1];

        uint index2 = index1;
        if (brown == 1) {
            index2 += groupSize - ((x % groupSize) * 2 + 1);
        } else {
            index2 += groupSize / 2;
        }
        uint value2 = data.elements[index2];

        if (index2 < dataCount) { // to avoid overflow when size is not power of two
            if (value1 > value2) {
                data.elements[index1] = value2;
                data.elements[index2] = value1;
            }
        } else {
            data.elements[index1] = value1;
        }
    }
 }
